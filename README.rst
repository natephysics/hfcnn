=======================
Introduction to `hfcnn`
=======================

A convolutional neural network designed to extract plasma parameters from thermal camera heat load images.

Acronym: Heat flux cnn

Features
--------

* The Heat Flux NN package is built using the Hydra framework and uses PyTorchLightning.


Data:
-----

If you run the package the __main__ will instantiate the action defined in the config/config.yaml folder. 

By default, data is stored in the following directory structure:

data/
    processed/
        train.pkl       ########################
        test.pkl        # generated by package #
        validation.pkl  ########################
    raw/
        51/ <- port number of the data
            100343888387473.pkl <- timestamp of data
        data_table.pkl <- name defined in configs/config.yaml

The processed data is generated when running the proprocessing actions.


Configuration:
--------------

All of the relevant settings are stored in the yaml config files in the configs folder. 


Data prep:
----------

There are data preprocessing operations for test data, and traing+vaildation data. These actions can be defined by actions in the config.yaml. 

For example, generating the test set would involve setting the action to prepare_test.

.. code-block:: yaml
    defaults:
        - _self_
        - action: prepare_test
        - filters: data_selection
        - datamodule: heat_load
        - model: cnn
        - optimizer: adam
        - criterion: mse
        - trainer: default
        - metric: default
        - callback: default
        - logger: tensorboard

        ...


Once the action is defined, all that is required is running the package

.. code-block:: console

    $ python hfcnn

Training:
---------
Training is no different than other actions. Simply set the action to train.

.. code-block:: yaml
    defaults:
        - _self_
        - action: train
        - filters: data_selection
        - datamodule: heat_load
        - model: cnn
        - optimizer: adam
        - criterion: mse
        - trainer: default
        - metric: default
        - callback: default
        - logger: tensorboard

        ...

Then run the package.

.. code-block:: console

    $ python hfcnn